#!/usr/bin/env ruby

require 'optparse'
require 'csv'
require 'front_matter_parser'
require 'erb'
require 'ostruct'
require_relative '../lib/ses'

interval = 0.1
dry_run = false

opt = OptionParser.new
opt.on('-s', '--source=SOURCE_FILE') {|v| SOURCE_FILE = v }
opt.on('-t', '--template=TEMPLATE_FILE') {|v| TEMPLATE_FILE = v }
opt.on('-i', '--interval=INTERVAL(sec)') {|v| interval = v.to_f }
opt.on('--dry-run') {|v| dry_run = v }
opt.parse!(ARGV)
exit 1 unless defined? SOURCE_FILE and defined? TEMPLATE_FILE

source = CSV.read SOURCE_FILE,
  col_sep: "\t",
  headers: :first_row,
  header_converters: :symbol,
  skip_blanks: true

mail = SES.new \
  access_key_id: ENV['AWS_ACCESS_KEY_ID'],
  secret_access_key: ENV['AWS_SECRET_ACCESS_KEY']

parsed = FrontMatterParser.parse_file(TEMPLATE_FILE)
mail.from = parsed.front_matter['from']
mail.subject = parsed.front_matter['subject']
template = ERB.new parsed.content

total = source.length
current = 0

source.each do |row|
  sleep interval
  mail.to = row[:email]
  params = OpenStruct.new(row.to_h).instance_eval {binding}
  mail.body = template.result(params)
  mail.send unless dry_run
  current += 1
  puts "(#{current}/#{total}) #{row}"
end
